## creating centos7 test instance(s)

- hosts: localhost
  vars:
    subnet:
    zone:
    vpc:
    session: create_centos_test_instance
    instance_count: 2
    key: Ansible
    instance: t2.small
    image: ami-dd3c0f36                                         # CentOS7
    region: eu-central-1                                        # Frankfurt/Main
    instance_tags:
      OS: centos
      Name: centos-test
      Application: testing
      Environment: testing
      Finance-ID: 1337
    securitygroups: ['SSH']                                     # multiple groups seperatet by comma e.g. ['a','b']

  gather_facts: False
  tasks:


    - name: "create '{{ instance_count }}' centos nodes"
      local_action:
        module: ec2
        key_name: "{{ key }}"
        group: "{{ securitygroups }}"
        instance_type: "{{ instance }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        instance_tags: "{{ instance_tags }}"
        count_tag:
            Application: "{{ instance_tags.Application }}"
        exact_count: "{{ instance_count }}"
        volumes:
          - device_name: /dev/sda1
            volume_type: gp2
            volume_size: 10
            delete_on_termination: true
        vpc_subnet_id: "{{ subnet }}"
        zone: "{{ zone }}"
      register: ec2



    - name: "tagging {{ instance_tags.Name }}'s"
      ec2_tag:
       region: "{{ region }}"
       resource: "{{ item.1.id }}"
       tags:
         Name: "{{ instance_tags.Name }}-{{ '%02d' | format(item.0 + 1) }}"
      with_indexed_items: "{{ ec2.instances }}"
      loop_control:
         label: "{{ item.1.id }} - {{ instance_tags.Name }}-{{ '%02d' | format(item.0 + 1) }}"





    - name: Get volumes ids
      ec2_vol:
#        aws_access_key: "{{ ec2_access_key }}"
#        aws_secret_key: "{{ ec2_secret_key }}"
#        security_token: "{{ access_token }}"
        region: "{{ region }}"
        instance: "{{ item }}"
        state: list
      with_items: "{{ ec2.instance_ids }}"
      register: ec2_instances_volumes
      loop_control:
        label: "{{ item }}"



    - name: "Tag volumes"
      ec2_tag:
#         aws_access_key: "{{ ec2_access_key }}"
#         aws_secret_key: "{{ ec2_secret_key }}"
#         security_token: "{{ access_token }}"
       region: "{{ region }}"
       resource: "{{ item.1.id }}"
       tags: "{{ instance_tags | combine({'Instance': item.1.attachment_set.instance_id}, {'Device': item.1.attachment_set.device}) }}"
      with_subelements:
       - "{{ ec2_instances_volumes.results }}"
       - volumes
      loop_control:
       label: "{{ item.1.id }} - {{ item.1.attachment_set.device }}"



    - name: "Wait for '{{ instance_count }}' node's SSH to come up"
      local_action: wait_for
                    host={{ item.public_ip }}
                    port=22
                    state=started
      with_items: "{{ ec2.instances }}"



    - name: "add '{{ instance_count }}' nodes to tmp group"
      add_host:
        name: "{{ item.public_ip }}"
        groups:
          - tag_Environment_testing
        ansible_user: centos
        ansible_port: 22
        ansible_ssh_private_key_file: ~/.ssh/Ansible.pem
      with_items: "{{ ec2.instances }}"



- hosts: tag_Environment_testing

  roles:
    - { role: technology/vim-enhanced }
    - { role: technology/htop }
